// <auto-generated />
using System;
using ABTestRealTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ABTestRealTest.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20210517151456_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Russian_Russia.1251")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.HasSequence("seq_system_users");

            modelBuilder.Entity("ABTestRealTest.Data.Models.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('seq_system_users'::regclass)");

                    b.Property<DateTime?>("LastActivityDate")
                        .HasColumnType("date")
                        .HasColumnName("last_activity_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("date")
                        .HasColumnName("registration_date");

                    b.HasKey("Id");

                    b.ToTable("system_users");
                });
#pragma warning restore 612, 618
        }
    }
}
